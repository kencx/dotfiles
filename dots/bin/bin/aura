#!/usr/bin/env bash

# wrapper tool for aurutils to manage custom repository
# should NOT be run as root
# but syncing requires root access

set -euo pipefail

DB="custom"
REPO_DIR="/var/cache/pacman/$DB"
BUCKET=""

help() {
    cat <<EOF
usage: ./aur-wrapper [subcommand] [args]

  Subcommand:
    help    Print help
    list    List all packages in DB
    add     Add package to DB from AUR
    remove  Remove package from DB
    sync    Sync packages
EOF
}

aur_sync() {
    sudo pacsync "$DB" >/dev/null
}

subcommand=${1:-}

case $subcommand in
"list")
    aur_sync
    aur repo --database "$DB" --list
    ;;

"add")
    shift
    aur sync \
        --no-view \
        --no-confirm \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" "$@"
    aur_sync
    ;;

"remove")
    shift
    repo-remove "$REPO_DIR/$DB.db.tar.xz" "$@"

    for pkg in "$@"; do
        find "$REPO_DIR" -type f -name "$pkg*.pkg.*" -printf "removing %P\n" -delete
    done
    aur_sync
    ;;

"sync")
    AUR_ASROOT=1 aur sync \
        --no-view \
        --no-confirm \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" \
        --upgrades -k0
    sudo paccache -rvk2 -c "$REPO_DIR"
    ;;
"" | *)
    help
    ;;
esac

# sync to minio bucket
# mcli mirror --overwrite --remove "$REPO_DIR" "$BUCKET"
