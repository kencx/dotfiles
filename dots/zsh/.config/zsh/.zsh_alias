alias sudo="sudo "

# parse colours
alias less="less -R"

# unified diff
alias diff="diff -u"

alias nv="nvim"
alias xclip="xclip -selection clipboard"
alias showpath="echo $PATH | tr ':' '\n'"
alias reloadz="source $HOME/.config/zsh/.zshrc"
alias rmorphans="pacman -Qtdq | sudo pacman -Rns -"

alias pbcopy="xclip -selection c"
alias pbpaste="xclip -o -selection c"

alias rm="echo 'Use tm instead'"
alias tm="trash"

alias pf="ps aux | fzf"

# ls
alias ls='ls --color=auto'
alias la='ls -la --color=auto'
alias ll='ls -la --color=auto'
alias lah='ls -lah --color=auto'

# docker
alias dc="docker compose"
alias dcu="docker compose up -d"
alias dcd="docker compose down"
alias dps="docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Networks}}\t{{.Status}}'"
alias dl="docker logs -f"
alias di="docker images | fzf"

function dce {
	docker exec -it $1 bash
}

# git
unalias gcf
alias gst='git status'
alias gap='git -c color.diff=true add --patch'
alias gc='git commit --verbose'
alias gp='git push'
alias gds='git diff --staged'
alias gd='forgit::diff'
alias gl='forgit::log'

export FORGIT_ADD_FZF_OPTS="--prompt='git add >'"
export FORGIT_LOG_FZF_OPTS="--prompt='git log >'"
export FORGIT_DIFF_FZF_OPTS="--prompt='git diff >'"
export FORGIT_CHECKOUT_BRANCH_FZF_OPTS="--prompt='git branch >'"

function glg {
	watch --color -n 3 git log --all --graph --oneline --decorate=short --color=always
}

# delete branches
function gcbd {
    git branch |
        grep --invert-match '\*' |
        cut -c 3- |
        fzf --multi --preview="git log {} --" |
        xargs --no-run-if-empty git branch --delete --force
}

function gw {
    select=$(git worktree list | fzf | cut -d ' ' -f1)
    if [[ -n "$select" ]]; then
        cd "$select" || exit
    fi
}

# view fetched changes
function gf {
    local log_format="%C(auto)%h%d %s %C(black)%C(bold)%cr%Creset"
    git fetch
    git log --graph --color=always --format=$log_format ...HEAD@{u} | \
    fzf --exit-0 \
        --preview="echo {} | grep -Eo '[a-f0-9]+' | head -1 | tr -d '[:space:]' | xargs -I% git show --color=always -U3 % --"
}

# only fetch master branch from specified remotes
function gfm {
    git fetch origin +refs/heads/master:refs/remotes/origin/master

    if git ls-remote --exit-code upstream > /dev/null 2>&1 ; then
        git fetch --no-tags upstream +refs/heads/master:refs/remotes/upstream/master
    fi

    if git ls-remote --exit-code develop > /dev/null 2>&1 ; then
        git fetch --no-tags develop +refs/heads/master:refs/remotes/develop/master
    fi
}

# systemd
alias syscat='systemctl cat'
alias sys='systemctl status'
alias sysstart='sudo systemctl start'
alias sysrestart='sudo systemctl restart'
alias sysstop='sudo systemctl stop'
alias sysdr='sudo systemctl daemon-reload'

# ansible
alias adoc='ansible-doc'
alias ainv='ansible-inventory'
alias aplay='ansible-playbook'

# bitwarden
alias bwu='export BW_SESSION="$(bw unlock --raw)"'
alias bwl='export BW_SESSION='

alias obs="glow -l $HOME/syncthing/sync/obsidian"

function zd {
    select=$(fd . "$HOME/dev" --type d --max-depth=1 | fzf)
    if [[ -n "$select" ]]; then
        cd "$select" || exit
    fi
}

# search aliases and paste selection in command line
function aliases {
    print -z -- $(alias | fzf | cut -d"=" -f1)
}

function scr {
	scrot $HOME/Screenshots/%b%d-%H:%M:%S.png "$@"
	notify-send "Screenshot taken"
}

function certcat {
    openssl x509 -text -noout -in "$1"
}

function cheat {
	curl cheat.sh/$1
}

function bk {
    cp -a "$1" "${1}_$(date --iso-8601=seconds)"
}

# turn on/off wireguard client
# function wgon {
# 	ssh pi "wgc -o"
# }
#
# function wgoff {
# 	ssh pi "wgc -f"
# }

function clear_libvirt {
    sudo find /var/lib/libvirt/images -mtime +7
    printf >&2 '%s ' 'Confirm clear libvirt images? (y/n)'
    read ans
    echo
    if [[ $ans =~ ^[Yy]$ ]]; then
        sudo find /var/lib/libvirt/images -mtime +7 -exec rm -- '{}' \;
        echo "Libvirt images cleared"
    fi
}

