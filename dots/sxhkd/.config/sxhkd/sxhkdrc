
# floating terminal
super + Return
	st

# tiled terminal
super + shift + Return
    st -c tiled

# rofi
super + space
	rofi -show drun -width -100

# keybindings
super + slash
    st -c keys keyb

# windows
super + semicolon
    rofi -show window -width -100

# bookmarks
# super + apostrophe

# screenshot
super + shift + s
	scrot $HOME/Screenshots/%b%d-%H:%M:%S.png && \
	notify-send "Screenshot taken"

# bluetooth menu
super + shift + b
    $HOME/.config/eww/bin/bluetooth --show-menu

# wifi menu
super + shift + c
    $HOME/.config/eww/bin/iwd-rofi

# power menu
super + shift + p
	eww open powermenu

# close power menu
super + shift + q
	eww close powermenu

super + ctrl + l
    systemctl suspend && slock

# mute volume
XF86AudioMute
    pactl set-sink-mute @DEFAULT_SINK@ toggle

# volume control
XF86Audio{Raise,Lower}Volume
    pactl set-sink-volume @DEFAULT_SINK@ {+,-}1000

XF86MonBrightness{Up,Down}
    xbacklight -{inc,dec} 20 && notify-send "Brightness"

# configs
super + z
    st -c configs $HOME/bin/configs

# toggle scratchpad
super + u
    $HOME/bin/pad scratchpad

# telegram
super + t
    xdo activate -N TelegramDesktop || TelegramDesktop

#
# bspwm hotkeys
#

# reload sxhkd
super + Escape
	pkill -USR1 -x sxhkd

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

#
# state/flags
#

# toggle floating and tiled state
super + s
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi

# set the window state
super + {shift + t,f}
	bspc node -t {pseudo_tiled,fullscreen}

# toggle locked, sticky, private node flag
super + ctrl + {l,s}
	bspc node -g {locked,sticky} || \
    bspc node -g {locked=off,sticky=off}

# hide current window
super + n : super + h
    bspc node focused.window -g hidden=on

# select windows to unhide
super + n : super + shift + h
    $HOME/bin/hidw

# toggle {hide,unhide} all windows in focused desktop
super + n : super + ctrl + h
    while bspc node any.local.hidden.window -g hidden=off; do false; done \
        && while bspc node 'any.local.!hidden.window' -g hidden=on; do :; done


#
# focus/swap
#

# {focus, swap} the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# swap the current node and the biggest node
super + n : super + g
	bspc node -s biggest.local

# focus previous/next node
super + paren{left,right}
    bspc node -f {prev,next}.local.!hidden.window

# rotate nodes {clockwise, anti-clockwise}
super + n : super + {q,e}
    bspc node @/ -C {forward,backward}

# flip nodes vertically, horizontally
super + n : super + {_,shift + } f
    bspc node @/ -F {vertical, horizontal}

# {focus, send node to} {1-6} desktop
super + n : {_, super + } {1-6}
	bspc {desktop -f, node -d} '^{1-6}' --follow

# send all windows in current desktop to chosen desktop

# focus the previous/next desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

#
# preselect
#

# preselect the direction
super + p : super + {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + p : super + space
	bspc node -p cancel

# move window to chosen preselection
super + shift + m
    bspc node -n last.!automatic

#
# move/resize
#

# super + r turns on resize mode. Esc to exit resize mode

# resize: expand window
super + e : {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# resize: contract window
super + e : shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move floating window
super + e : {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# equalize size
super + e : super + e
    bspc node @/ --equalize
